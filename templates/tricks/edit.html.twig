{% extends 'base.html.twig' %}

{% block title %}Edit Tricks{% endblock %}

{% block body %}
    <br><br>
    <h1 style="text-align:center;">Modifier une figure</h1>

    {{ include('tricks/_formedit.html.twig', {'button_label': 'Mettre à jour'}) }}

    <a href="{{ path('app_tricks_index') }}" class="btn btn-primary" style="margin-bottom:10px">Retour</a>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function() {
    // Soumet le formulaire avec les images à supprimer sélectionnées
    $('form').submit(function(e) {
        // Sélectionne les cases à cocher cochées
        var selectedPictures = $('input[name="remove_pictures[]"]:checked').map(function() {
            return $(this).val();
        }).get();

        // Ajoute les valeurs sélectionnées à un champ caché dans le formulaire
        $('<input>').attr({
            type: 'hidden',
            name: 'selected_pictures',
            value: JSON.stringify(selectedPictures)
        }).appendTo($(this));

        return true; // Continue la soumission du formulaire
    });
});

    //On recherche s'il existe un trick ayant déjà ce nom.
    $(document).ready(function() {
        const trickNameInput = $('#tricks_name');
        const trickNameError = $('#trick-name-error');

        trickNameInput.on('input', function() {
            const trickName = trickNameInput.val().trim();
            if (trickName === '') {
                trickNameError.text('');
                return;
            }

            // Envoi une requête AJAX GET pour vérifier le nom du trick
            $.get(`/check-trick-name?name=${encodeURIComponent(trickName)}`, function(data) {
                if (data.valid) {
                trickNameError.text(''); // Nom valide, efface le message d'erreur
            } else {
                trickNameError.text('Ce nom de trick est déjà pris.'); // Nom déjà existant, affiche une erreur
            }
        }, 'json');
        });
    });

    //On compte le nombre de caractères pour signaler à l'utilisateur s'il dépasse le nombre autorisé.
    $(document).ready(function() {
        const descriptionInput = $('#tricks_description');
        const descriptionError = $('#description-error');

        descriptionInput.on('input', function() {
            const maxLength = 1000; // Le nombre maximal de caractères
            const description = descriptionInput.val();
        
            if (description.length > maxLength) {
                descriptionError.text(`La description ne peut pas dépasser ${maxLength} caractères.`);
                descriptionInput.addClass('is-invalid'); // Ajoute une classe CSS pour indiquer une erreur
            } else {
                descriptionError.text(''); // Efface le message d'erreur
                descriptionInput.removeClass('is-invalid'); // Supprime la classe CSS d'erreur
            }
        });
    });

    //On vérifie si les images ont le bon format
    $(document).ready(function() {
        const picturesInput = $('#tricks_pictures'); 
        const picturesError = $('#pictures-error');

        picturesInput.on('change', function() {
            picturesError.text(''); // Efface le message d'erreur précédent

            const allowedExtensions = ['png', 'jpg', 'jpeg', 'svg', 'pdf', 'ico', 'mp4', 'webp', 'webm'];

            // Vérifie chaque fichier sélectionné
            for (let i = 0; i < picturesInput[0].files.length; i++) {
                const file = picturesInput[0].files[i];
                const extension = file.name.split('.').pop().toLowerCase();

                // Vérifie si l'extension est dans la liste des extensions autorisées
                if (allowedExtensions.indexOf(extension) === -1) {
                    picturesError.text('Le format de fichier ' + file.name + ' n\'est pas valide.');
                    picturesInput.val(''); // Réinitialise le champ pour supprimer les fichiers non valides
                    return;
                }
            }
        });
    });    
    </script>
{% endblock %}
